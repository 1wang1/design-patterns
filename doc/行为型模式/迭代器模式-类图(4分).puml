@startuml
note as IteratorDes
迭代器模式主要包含以下角色。
抽象聚合（Aggregate）角色：定义存储、添加、删除聚合对象以及创建迭代器对象的接口。
具体聚合（ConcreteAggregate）角色：实现抽象聚合类，返回一个具体迭代器的实例。
抽象迭代器（Iterator）角色：定义访问和遍历聚合元素的接口，通常包含 hasNext()、first()、next() 等方法。
具体迭代器（Concretelterator）角色：实现抽象迭代器接口中所定义的方法，完成对聚合对象的遍历，记录遍历的当前位置。
end note
class Iterator{
// 抽象迭代器
+ first():Object
+ next():Object
+ hasNext():boolean
}

class ConcreteIterator{
// 具体迭代器
- list:List<Object>
+ ConcreteIterator(List<Object> list)
+ first():Object
+ next():Object
+ hasNext():boolean
}

ConcreteIterator -up-|> Iterator

class Aggregate{
// 抽象聚合
+ add(Object obj):void
+ remove(Object obj):void
+ getIterator():Iterator
}

class ConcreteAggregate{
// 具体聚合
- list:List<Object>
+ add(Object obj):void
+ remove(Object obj):void
+ getIterator():Iterator
}
ConcreteAggregate -up-|> Aggregate

ConcreteIterator -right-> ConcreteAggregate

@enduml