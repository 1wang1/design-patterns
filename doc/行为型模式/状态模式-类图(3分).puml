@startuml
note as 状态模式
状态模式包含以下主要角色。
1. 环境（Context）角色：也称为上下文，它定义了客户感兴趣的接口，维护一个当前状态，并将与状态相关的操作委托给当前状态对象来处理。
2. 抽象状态（State）角色：定义一个接口，用以封装环境对象中的特定状态所对应的行为。
3. 具体状态（Concrete    State）角色：实现抽象状态所对应的行为。
end note
class Context{
// 环境类
- state:State
+ Context()
+ set/getState():void
+ handle():void
}

note as 环境类
//定义环境类的初始状态
public Context()
{
    this.state=new ConcreteState1();
}
end note
环境类 .. Context

abstract State{
// 抽象状态类
+ handle(Context context):void
}

class ConcreteState1{
// 具体状态类1
+ handle(Context context):void
}
note as 具体状态类
// 1/2 类似
public void Handle(Context context)
{
    System.out.println("当前状态是 1的业务逻辑");
    System.out.println("处理完后，将状态改为2");
    context.setState(new ConcreteState2());
}
end note

具体状态类 .. ConcreteState1
class ConcreteState2{
// 具体状态类2
+ handle(Context context):void
}

State -right-o Context
ConcreteState1 .up.|> State
ConcreteState2 .up.|> State

@enduml