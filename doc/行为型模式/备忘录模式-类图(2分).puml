@startuml
note as command
备忘录模式的主要角色如下。
发起人（Originator）角色：记录当前时刻的内部状态信息，提供创建备忘录和恢复备忘录数据的功能，实现其他业务功能，它可以访问备忘录里的所有信息。
备忘录（Memento）角色：负责存储发起人的内部状态，在需要的时候提供这些内部状态给发起人。
管理者（Caretaker）角色：对备忘录进行管理，提供保存与获取备忘录的功能，但其不能对备忘录的内容进行访问与修改。
end note
class MementoPattern{
// 客户类
}
class Originator{
// 发起人
- state:String
+ get/setState()
+ createMemento(Memento m):void
}

class Memento{
// 备忘录
- state:String
+ get/setState()
+ Memento(String state)
}

class Caretaker{
// 管理者
- memento:Memento
+ get/setMemento()
}

MementoPattern .right.> Originator
MementoPattern .down.> Caretaker
Originator -down-> Memento
Memento -right-o Caretaker

@enduml